/* DATA BIDING */ Gérer le DOM de manière dynamique

Data Biding types :
- Angular supports several types of data binding : Interpolation, Property Binding, Event Binding, and two-Way Binding

1. Interpolation ('{{}}) :
    - One-Way data binding that allows embedding expressions in the template
    - it updates the view with the component's data


2. Property Binding ('[property]') : 
    - One-way  data binding that binds the value of a component property to an HTML element property.
    - it updates the view with the component's data
    - Property binding can be used to set attributes of HTML elements
    - it allows dynamic modification of element attributes based on component data

3. Event Binding ('(event)') :
    - One-way data binding that binds an event in the template to a a method in the component.
    - it allows the component to respond to user actions.

4. Two-way Binding ('[(ngModel)]') :
    - two-way binding requires importing the 'FormsModule' in the module.
    - two-way data binding combines property binding and event binding
    - it allows data to flow both from the component to the view and from the view to the component

5. Template Reference Variables ('#var') :
    - Template reference variables capture references to HTML elements or Angular components.
    - They can be used to access the element or component in the template or trigger methods.

6. Expressions Context in Templates : 
    - In templates, you have access to the component's properties and methods.
    - This allows you to perform calculations, call methods, and use dynamic data in the template.


/* ------------------------------------------------------------------------------------------------------- */

/* ------------------------------------------------------------------------------------------------------- */

1. ONE WAY DATA BINDING

        1.1 Interpolation
            From component (ts) class to template (html)

        1.2. Property binding
            From component(class) class to template's element property(attributes)
            Expl : 
                <a href='#'> Link </a>
                <input type='text' />

        1.3 Event Binding
            From component(class) to template's element's event
            Expl :  <div onmouseover='highlightRecord()'></div>


2. TWO WAY DATA BINDING

    2.1 Data will flow from component(class) to template AND back from template(html/ui) to component(class)


/* ------------------------------------------------------------------------------------------------------- */
    INTERPOLATION
/* ------------------------------------------------------------------------------------------------------- */

1. Interpolation is a technique written in between double curly braces
    {{ }} -> inside the template

2. Data flow from component(class) to template

3. Security check for injections by escarping HTML entities


/* ------------------------------------------------------------------------------------------------------- */
    EVENT BIDING
/* ------------------------------------------------------------------------------------------------------- */

1. Event Biding allows you to bind events of HTML elements or directives.

2. it establishes a one-way flow of data from the component to the template.

3. Syntax : 
    - Enclose the target event in function brackets (()) within the template.
    - Implement the method in the component class.
    
EXPL MOUSEOVER : 
    HTML COMPONENTA : 
        <p (mouseover)="showImage=true" (mouseout)="showImage=false"> Test </p>
        <div>
            <img *ngIf="showImage" src="./assets/images/accueil1.jpg" class="img-fluid" alt="img">
        </div>

    TS COMPONENTA : 
        export class NotationComponent implements OnInit {
            showImage : boolean

            constructor() {
                this.showImage = false
            }
        }

*****************************************************************************************************************************************************************
ts :                                                *    HTML : 
                                                    *       <button class="btn btn-primary" (click)="onLike()">J'aime</button>
import { Component } from '@angular/core';          *       <p>Nb de like {{TotalNbLike}}</p>
                                                    *       
                                                    *       
@component({                                        *       
    selector : 'app-event-biding',                  *
    standalone : true,                              *       
    imports :[]                                     *       
    templateUrl : "/.event-biding.component.html',  *       
    styleURL : "/.event-biding.component.scss',     *
})                                                  *       <select [(NgModel)]="dropDownOption>
                                                    *           <option [ngValue]="'Option1'"> Option 1 </Option>
                                                    *           <option [ngValue]="'Option2'"> Option 2 </Option>
export class TwoWayComponent {                      *       </select>
    TotalNbLike : number = 0 ;                      *       <p>Dropdown value: {{ dropDownOption }}</p>
                                                    *       
                                                    *       <textarea [(ngModel)]="textareaValue" placeholder="Enter details here"></textarea>
    constructor(){}                                 *       <p>Textarea value: {{ textareaValue }}</p>
    ngOnInit() : void {}                            *
    
    onLike() {
        this.TotalNbLike++;
    }
    
    
    
        
}                                                   *
*****************************************************************************************************************************************************************


/* ------------------------------------------------------------------------------------------------------- */
    TWO WAY DATA BINDIN
/* ------------------------------------------------------------------------------------------------------- */

1. 2way data flows from component to template and back from template to component

2. [(ngModel)]

3. import "FormsModule" -> Mandatory -> you will errors

4. We will bind ngModel to all the form fields

*****************************************************************************************************************************************************************
ts :                                                *    HTML : 
                                                    *       <input [(ngModel)]="name" placeholder="Enter name" /> // 1. Enter in the template here
import { Component } from '@angular/core';          *       <p>Hello, {{name}}</p> //3. Sent there
import ( FormsModule ) from '@angular/forms';       *       
                                                    *       <input type="checkbox" [(ngModel)]="isChecked" />
@component({                                        *       <p>CheckBox value is : {{ isChecked }} </p>
    selector : 'app-two-way',                       *
    standalone : true,                              *       <input type="radio" [(ngModel)]="SelectedOption" [value]='Option 1'"> Option1
                                                    *       <input type="radio" [(ngModel)]="SelectedOption" [value]='Option 2'"> Option2
imports : [FormsModule],                            *       <p>Selected Radio value is : {{ SelectedOption }} </p>
    templateUrl : "/.two-way.component.html',       *
    styleURL : "/.two-way.component.scss',          *       <select [(NgModel)]="dropDownOption>
})                                                  *           <option [ngValue]="'Option1'"> Option 1 </Option>
                                                    *           <option [ngValue]="'Option2'"> Option 2 </Option>
export class TwoWayComponent {                      *       </select>
    name : string = '' ;                            *       <p>Dropdown value: {{ dropDownOption }}</p>
    // 2. Is recupered here                         *       
    isChecked : boolean = false ;                   *       <textarea [(ngModel)]="textareaValue" placeholder="Enter details here"></textarea>
    SelectedOption : string = '';                   *       <p>Textarea value: {{ textareaValue }}</p>
    dropDownOption : string = '';                   *
    textareaValue : string = '';                    *
                                                    *
                                                    *
                                                    *
}                                                   *
*****************************************************************************************************************************************************************